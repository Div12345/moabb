
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/plot_within_session_p300.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_auto_examples_plot_within_session_p300.py>`
        to download the full example code

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_plot_within_session_p300.py:


===========================
Within Session P300
===========================

This example shows how to perform a within session analysis on three different
P300 datasets.

We will compare two pipelines :

- Riemannian geometry
- XDAWN with Linear Discriminant Analysis

We will use the P300 paradigm, which uses the AUC as metric.

.. GENERATED FROM PYTHON SOURCE LINES 17-38

.. code-block:: default

    # Authors: Pedro Rodrigues <pedro.rodrigues01@gmail.com>
    #
    # License: BSD (3-clause)

    import warnings

    import matplotlib.pyplot as plt
    import numpy as np
    import seaborn as sns
    from pyriemann.estimation import Xdawn, XdawnCovariances
    from pyriemann.tangentspace import TangentSpace
    from sklearn.base import BaseEstimator, TransformerMixin
    from sklearn.discriminant_analysis import LinearDiscriminantAnalysis as LDA
    from sklearn.pipeline import make_pipeline

    import moabb
    from moabb.datasets import BNCI2014009
    from moabb.evaluations import WithinSessionEvaluation
    from moabb.paradigms import P300






.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    /home/runner/work/moabb/moabb/.venv/lib/python3.9/site-packages/seaborn/cm.py:1582: UserWarning: Trying to register the cmap 'rocket' which already exists.
      mpl_cm.register_cmap(_name, _cmap)
    /home/runner/work/moabb/moabb/.venv/lib/python3.9/site-packages/seaborn/cm.py:1583: UserWarning: Trying to register the cmap 'rocket_r' which already exists.
      mpl_cm.register_cmap(_name + "_r", _cmap_r)
    /home/runner/work/moabb/moabb/.venv/lib/python3.9/site-packages/seaborn/cm.py:1582: UserWarning: Trying to register the cmap 'mako' which already exists.
      mpl_cm.register_cmap(_name, _cmap)
    /home/runner/work/moabb/moabb/.venv/lib/python3.9/site-packages/seaborn/cm.py:1583: UserWarning: Trying to register the cmap 'mako_r' which already exists.
      mpl_cm.register_cmap(_name + "_r", _cmap_r)
    /home/runner/work/moabb/moabb/.venv/lib/python3.9/site-packages/seaborn/cm.py:1582: UserWarning: Trying to register the cmap 'icefire' which already exists.
      mpl_cm.register_cmap(_name, _cmap)
    /home/runner/work/moabb/moabb/.venv/lib/python3.9/site-packages/seaborn/cm.py:1583: UserWarning: Trying to register the cmap 'icefire_r' which already exists.
      mpl_cm.register_cmap(_name + "_r", _cmap_r)
    /home/runner/work/moabb/moabb/.venv/lib/python3.9/site-packages/seaborn/cm.py:1582: UserWarning: Trying to register the cmap 'vlag' which already exists.
      mpl_cm.register_cmap(_name, _cmap)
    /home/runner/work/moabb/moabb/.venv/lib/python3.9/site-packages/seaborn/cm.py:1583: UserWarning: Trying to register the cmap 'vlag_r' which already exists.
      mpl_cm.register_cmap(_name + "_r", _cmap_r)
    /home/runner/work/moabb/moabb/.venv/lib/python3.9/site-packages/seaborn/cm.py:1582: UserWarning: Trying to register the cmap 'flare' which already exists.
      mpl_cm.register_cmap(_name, _cmap)
    /home/runner/work/moabb/moabb/.venv/lib/python3.9/site-packages/seaborn/cm.py:1583: UserWarning: Trying to register the cmap 'flare_r' which already exists.
      mpl_cm.register_cmap(_name + "_r", _cmap_r)
    /home/runner/work/moabb/moabb/.venv/lib/python3.9/site-packages/seaborn/cm.py:1582: UserWarning: Trying to register the cmap 'crest' which already exists.
      mpl_cm.register_cmap(_name, _cmap)
    /home/runner/work/moabb/moabb/.venv/lib/python3.9/site-packages/seaborn/cm.py:1583: UserWarning: Trying to register the cmap 'crest_r' which already exists.
      mpl_cm.register_cmap(_name + "_r", _cmap_r)




.. GENERATED FROM PYTHON SOURCE LINES 39-40

getting rid of the warnings about the future

.. GENERATED FROM PYTHON SOURCE LINES 40-45

.. code-block:: default

    warnings.simplefilter(action="ignore", category=FutureWarning)
    warnings.simplefilter(action="ignore", category=RuntimeWarning)

    moabb.set_log_level("info")








.. GENERATED FROM PYTHON SOURCE LINES 46-50

This is an auxiliary transformer that allows one to vectorize data
structures in a pipeline For instance, in the case of an X with dimensions
Nt x Nc x Ns, one might be interested in a new data structure with
dimensions Nt x (Nc.Ns)

.. GENERATED FROM PYTHON SOURCE LINES 50-65

.. code-block:: default



    class Vectorizer(BaseEstimator, TransformerMixin):
        def __init__(self):
            pass

        def fit(self, X, y):
            """fit."""
            return self

        def transform(self, X):
            """transform. """
            return np.reshape(X, (X.shape[0], -1))









.. GENERATED FROM PYTHON SOURCE LINES 66-70

Create Pipelines
----------------

Pipelines must be a dict of sklearn pipeline transformer.

.. GENERATED FROM PYTHON SOURCE LINES 70-74

.. code-block:: default



    pipelines = {}








.. GENERATED FROM PYTHON SOURCE LINES 75-78

We have to do this because the classes are called 'Target' and 'NonTarget'
but the evaluation function uses a LabelEncoder, transforming them
to 0 and 1

.. GENERATED FROM PYTHON SOURCE LINES 78-92

.. code-block:: default

    labels_dict = {"Target": 1, "NonTarget": 0}

    pipelines["RG+LDA"] = make_pipeline(
        XdawnCovariances(
            nfilter=2, classes=[labels_dict["Target"]], estimator="lwf", xdawn_estimator="scm"
        ),
        TangentSpace(),
        LDA(solver="lsqr", shrinkage="auto"),
    )

    pipelines["Xdw+LDA"] = make_pipeline(
        Xdawn(nfilter=2, estimator="scm"), Vectorizer(), LDA(solver="lsqr", shrinkage="auto")
    )








.. GENERATED FROM PYTHON SOURCE LINES 93-103

Evaluation
----------

We define the paradigm (P300) and use all three datasets available for it.
The evaluation will return a DataFrame containing a single AUC score for
each subject / session of the dataset, and for each pipeline.

Results are saved into the database, so that if you add a new pipeline, it
will not run again the evaluation unless a parameter has changed. Results can
be overwritten if necessary.

.. GENERATED FROM PYTHON SOURCE LINES 103-114

.. code-block:: default


    paradigm = P300(resample=128)
    dataset = BNCI2014009()
    dataset.subject_list = dataset.subject_list[:2]
    datasets = [dataset]
    overwrite = True  # set to True if we want to overwrite cached results
    evaluation = WithinSessionEvaluation(
        paradigm=paradigm, datasets=datasets, suffix="examples", overwrite=overwrite
    )
    results = evaluation.process(pipelines)





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    009-2014-WithinSession:   0%|          | 0/2 [00:00<?, ?it/s]
      0%|                                              | 0.00/18.5M [00:00<?, ?B/s][A
      0%|                                     | 17.4k/18.5M [00:00<03:31, 87.5kB/s][A
      0%|                                      | 50.2k/18.5M [00:00<02:19, 133kB/s][A
      1%|▏                                      | 109k/18.5M [00:00<01:09, 267kB/s][A
      1%|▎                                      | 148k/18.5M [00:00<01:17, 237kB/s][A
      1%|▍                                      | 217k/18.5M [00:00<00:52, 348kB/s][A
      2%|▌                                      | 280k/18.5M [00:00<00:43, 420kB/s][A
      2%|▊                                      | 364k/18.5M [00:00<00:34, 534kB/s][A
      2%|▉                                      | 443k/18.5M [00:01<00:30, 598kB/s][A
      3%|█▏                                     | 537k/18.5M [00:01<00:25, 692kB/s][A
      3%|█▎                                     | 635k/18.5M [00:01<00:23, 776kB/s][A
      4%|█▌                                     | 717k/18.5M [00:01<00:22, 788kB/s][A
      4%|█▋                                     | 820k/18.5M [00:01<00:20, 851kB/s][A
      5%|██                                     | 951k/18.5M [00:01<00:17, 985kB/s][A
      6%|██▏                                  | 1.08M/18.5M [00:01<00:16, 1.08MB/s][A
      7%|██▍                                  | 1.23M/18.5M [00:01<00:14, 1.20MB/s][A
      8%|██▊                                  | 1.40M/18.5M [00:01<00:12, 1.34MB/s][A
      8%|███                                  | 1.53M/18.5M [00:02<00:12, 1.33MB/s][A
      9%|███▍                                 | 1.72M/18.5M [00:02<00:11, 1.49MB/s][A
     10%|███▊                                 | 1.92M/18.5M [00:02<00:10, 1.63MB/s][A
     11%|████▏                                | 2.13M/18.5M [00:02<00:09, 1.77MB/s][A
     13%|████▋                                | 2.36M/18.5M [00:02<00:08, 1.94MB/s][A
     14%|█████▎                               | 2.65M/18.5M [00:02<00:07, 2.22MB/s][A
     16%|█████▊                               | 2.92M/18.5M [00:02<00:06, 2.36MB/s][A
     18%|██████▌                              | 3.26M/18.5M [00:02<00:05, 2.68MB/s][A
     19%|███████▏                             | 3.61M/18.5M [00:02<00:05, 2.91MB/s][A
     22%|███████▉                             | 3.99M/18.5M [00:02<00:04, 3.19MB/s][A
     24%|████████▊                            | 4.42M/18.5M [00:03<00:04, 3.51MB/s][A
     26%|█████████▋                           | 4.87M/18.5M [00:03<00:03, 3.75MB/s][A
     29%|██████████▋                          | 5.37M/18.5M [00:03<00:03, 4.09MB/s][A
     32%|███████████▊                         | 5.93M/18.5M [00:03<00:02, 4.52MB/s][A
     35%|█████████████                        | 6.54M/18.5M [00:03<00:02, 4.93MB/s][A
     39%|██████████████▎                      | 7.18M/18.5M [00:03<00:02, 5.35MB/s][A
     42%|███████████████▋                     | 7.84M/18.5M [00:03<00:01, 5.72MB/s][A
     47%|█████████████████▎                   | 8.64M/18.5M [00:03<00:01, 6.40MB/s][A
     51%|██████████████████▉                  | 9.49M/18.5M [00:03<00:01, 7.01MB/s][A
     56%|████████████████████▋                | 10.4M/18.5M [00:03<00:01, 7.60MB/s][A
     61%|██████████████████████▋              | 11.4M/18.5M [00:04<00:00, 8.29MB/s][A
     67%|████████████████████████▉            | 12.5M/18.5M [00:04<00:00, 9.12MB/s][A
     74%|███████████████████████████▎         | 13.7M/18.5M [00:04<00:00, 9.89MB/s][A
     81%|█████████████████████████████▊       | 14.9M/18.5M [00:04<00:00, 10.8MB/s][A
     88%|████████████████████████████████▋    | 16.4M/18.5M [00:04<00:00, 11.8MB/s][A
     97%|███████████████████████████████████▋ | 17.9M/18.5M [00:04<00:00, 12.8MB/s][A
      0%|                                              | 0.00/18.5M [00:00<?, ?B/s][A    100%|█████████████████████████████████████| 18.5M/18.5M [00:00<00:00, 19.8GB/s]
    009-2014-WithinSession:  50%|#####     | 1/2 [00:15<00:15, 15.83s/it]
      0%|                                              | 0.00/18.5M [00:00<?, ?B/s][A
      0%|                                      | 14.3k/18.5M [00:00<02:09, 143kB/s][A
      0%|                                      | 41.0k/18.5M [00:00<01:25, 216kB/s][A
      0%|▏                                     | 66.6k/18.5M [00:00<01:54, 161kB/s][A
      1%|▏                                     | 99.3k/18.5M [00:00<01:53, 163kB/s][A
      1%|▎                                      | 141k/18.5M [00:00<01:20, 228kB/s][A
      1%|▍                                      | 181k/18.5M [00:00<01:24, 216kB/s][A
      1%|▌                                      | 239k/18.5M [00:00<01:01, 299kB/s][A
      2%|▌                                      | 280k/18.5M [00:01<01:09, 262kB/s][A
      2%|▋                                      | 351k/18.5M [00:01<00:50, 363kB/s][A
      2%|▉                                      | 443k/18.5M [00:01<00:36, 495kB/s][A
      3%|█                                      | 525k/18.5M [00:01<00:31, 569kB/s][A
      3%|█▎                                     | 611k/18.5M [00:01<00:27, 645kB/s][A
      4%|█▍                                     | 692k/18.5M [00:01<00:25, 690kB/s][A
      4%|█▋                                     | 820k/18.5M [00:01<00:26, 675kB/s][A
      5%|█▉                                     | 935k/18.5M [00:02<00:22, 782kB/s][A
      6%|██▏                                   | 1.07M/18.5M [00:02<00:19, 915kB/s][A
      6%|██▍                                   | 1.18M/18.5M [00:02<00:17, 974kB/s][A
      7%|██▌                                  | 1.31M/18.5M [00:02<00:16, 1.06MB/s][A
      8%|██▉                                  | 1.46M/18.5M [00:02<00:14, 1.17MB/s][A
      9%|███▏                                 | 1.62M/18.5M [00:02<00:12, 1.30MB/s][A
     10%|███▌                                 | 1.78M/18.5M [00:02<00:12, 1.38MB/s][A
     11%|███▉                                 | 1.95M/18.5M [00:02<00:11, 1.45MB/s][A
     12%|████▎                                | 2.15M/18.5M [00:02<00:10, 1.59MB/s][A
     13%|████▋                                | 2.34M/18.5M [00:02<00:09, 1.70MB/s][A
     14%|█████                                | 2.54M/18.5M [00:03<00:09, 1.77MB/s][A
     15%|█████▌                               | 2.77M/18.5M [00:03<00:08, 1.92MB/s][A
     16%|██████                               | 3.04M/18.5M [00:03<00:07, 2.15MB/s][A
     18%|██████▋                              | 3.33M/18.5M [00:03<00:06, 2.36MB/s][A
     19%|███████▏                             | 3.61M/18.5M [00:03<00:05, 2.49MB/s][A
     21%|███████▊                             | 3.93M/18.5M [00:03<00:05, 2.72MB/s][A
     23%|████████▌                            | 4.29M/18.5M [00:03<00:04, 2.97MB/s][A
     25%|█████████▍                           | 4.70M/18.5M [00:03<00:04, 3.27MB/s][A
     28%|██████████▎                          | 5.15M/18.5M [00:03<00:03, 3.63MB/s][A
     31%|███████████▎                         | 5.65M/18.5M [00:03<00:03, 4.04MB/s][A
     34%|████████████▍                        | 6.21M/18.5M [00:04<00:02, 4.49MB/s][A
     37%|█████████████▌                       | 6.82M/18.5M [00:04<00:02, 4.94MB/s][A
     40%|██████████████▉                      | 7.47M/18.5M [00:04<00:02, 5.41MB/s][A
     44%|████████████████▎                    | 8.18M/18.5M [00:04<00:01, 5.87MB/s][A
     48%|█████████████████▊                   | 8.93M/18.5M [00:04<00:01, 6.35MB/s][A
     53%|███████████████████▍                 | 9.75M/18.5M [00:04<00:01, 6.90MB/s][A
     58%|█████████████████████▎               | 10.7M/18.5M [00:04<00:01, 7.48MB/s][A
     63%|███████████████████████▎             | 11.7M/18.5M [00:04<00:00, 8.17MB/s][A
     69%|█████████████████████████▌           | 12.8M/18.5M [00:04<00:00, 9.08MB/s][A
     76%|███████████████████████████▉         | 14.0M/18.5M [00:04<00:00, 9.97MB/s][A
     83%|██████████████████████████████▌      | 15.3M/18.5M [00:05<00:00, 10.9MB/s][A
     90%|█████████████████████████████████▎   | 16.7M/18.5M [00:05<00:00, 11.7MB/s][A
     98%|████████████████████████████████████▎| 18.2M/18.5M [00:05<00:00, 12.6MB/s][A
      0%|                                              | 0.00/18.5M [00:00<?, ?B/s][A    100%|█████████████████████████████████████| 18.5M/18.5M [00:00<00:00, 21.4GB/s]
    009-2014-WithinSession: 100%|##########| 2/2 [00:31<00:00, 16.03s/it]    009-2014-WithinSession: 100%|##########| 2/2 [00:31<00:00, 16.00s/it]




.. GENERATED FROM PYTHON SOURCE LINES 115-119

Plot Results
----------------

Here we plot the results to compare the two pipelines

.. GENERATED FROM PYTHON SOURCE LINES 119-138

.. code-block:: default


    fig, ax = plt.subplots(facecolor="white", figsize=[8, 4])

    sns.stripplot(
        data=results,
        y="score",
        x="pipeline",
        ax=ax,
        jitter=True,
        alpha=0.5,
        zorder=1,
        palette="Set1",
    )
    sns.pointplot(data=results, y="score", x="pipeline", ax=ax, zorder=1, palette="Set1")

    ax.set_ylabel("ROC AUC")
    ax.set_ylim(0.5, 1)

    fig.show()



.. image:: /auto_examples/images/sphx_glr_plot_within_session_p300_001.png
    :alt: plot within session p300
    :class: sphx-glr-single-img






.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  32.187 seconds)


.. _sphx_glr_download_auto_examples_plot_within_session_p300.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example



  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: plot_within_session_p300.py <plot_within_session_p300.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: plot_within_session_p300.ipynb <plot_within_session_p300.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
